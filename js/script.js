
    async function getWeather() {
      const city = document.getElementById("city").value.trim(); // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡¶π‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶®‡ßá‡¶ì‡ßü‡¶æ
      if (!city) return alert("Please enter a city name"); // ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶ñ‡¶æ‡¶≤‡¶ø ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü

      try {
        // ‡¶∂‡¶π‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡ßü‡ßá latitude ‡¶ì longitude ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶æ
        const geo = await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${city}`);
        const geoData = await geo.json();
        if (!geoData.results) return alert("City not found"); // ‡¶∂‡¶π‡¶∞ ‡¶®‡¶æ ‡¶™‡ßá‡¶≤‡ßá ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü

        const { latitude, longitude } = geoData.results[0]; // lat/lon ‡¶®‡ßá‡¶ì‡ßü‡¶æ
        // ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ API ‡¶ï‡¶≤
        const res = await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current_weather=true&hourly=relativehumidity_2m`);
        const data = await res.json();

        const weather = data.current_weather;
        const humidity = data.hourly.relativehumidity_2m[0];

        document.getElementById("temp").innerText = `${weather.temperature}¬∞C`; // ‡¶§‡¶æ‡¶™‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü
        document.getElementById("desc").innerText =
          weather.weathercode === 0 ? "Clear" :
          weather.weathercode <= 3 ? "Cloudy" : "Rainy"; // ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ü‡¶æ‡¶á‡¶™
        document.getElementById("humidity").innerText = `${humidity}%`; // ‡¶Ü‡¶∞‡ßç‡¶¶‡ßç‡¶∞‡¶§‡¶æ
        document.getElementById("wind").innerText = `${weather.windspeed} km/h`; // ‡¶¨‡¶æ‡¶§‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ó‡¶§‡¶ø
        document.getElementById("icon").innerText =
          weather.weathercode === 0 ? "‚òÄÔ∏è" :
          weather.weathercode <= 3 ? "‚õÖ" : "üåßÔ∏è"; // ‡¶Ü‡¶á‡¶ï‡¶®

      } catch (err) {
        alert("Something went wrong!"); // ‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶≤‡ßá ‡¶è‡¶≤‡¶æ‡¶∞‡ßç‡¶ü
        console.log(err); // ‡¶ï‡¶®‡¶∏‡ßã‡¶≤‡ßá ‡¶è‡¶∞‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
      }
    }
 